/* eslint-disable prettier/prettier */
import { Injectable, InternalServerErrorException } from '@nestjs/common';
import { GoogleGenerativeAI } from '@google/generative-ai';

@Injectable()
export class ChatBotService {
  private genAI = new GoogleGenerativeAI(process.env.GOOGLE_GEMINI_API_KEY!);
  private model = this.genAI.getGenerativeModel({ model: 'gemini-2.0-flash' });
  
  private promptTexto = `ROBOT ASISTENTE DE CATEGORIZACI√ìN - VERSI√ìN 4.0

  üõë FUNCIONAMIENTO AUTOM√ÅTICO: Analizar mensajes y asignar EXCLUSIVAMENTE categor√≠as de esta lista:
  
  1. tecnologia ‚Üí (computadora, laptop, tablet, macbook, surface, ipad)
  2. peluches ‚Üí (peluche, osito, mu√±eco felpa, stuffed animal)
  3. accesorios ‚Üí (aretes, anillos, collares, gafas sol, joyer√≠a)
  4. libros ‚Üí (novela, c√≥mic, manga, libro texto, ebook)
  5. deporte ‚Üí (bal√≥n, raqueta, pesas, bicicleta, equipo gym)
  6. tazas ‚Üí (taza personalizada, mug, vaso t√©rmico, termo)
  7. ropa ‚Üí (vestido, camiseta, jeans, pantal√≥n, chaqueta)
  8. salud ‚Üí (perfume, vitaminas, suplementos, cuidado personal)
  9. electronica ‚Üí (c√°mara, televisor, auriculares, celular)
  10. hogar ‚Üí (decoraci√≥n, electrodom√©sticos, menaje, vajilla)
  11. juguetes ‚Üí (mu√±ecas, carros juguete, figuras acci√≥n)
  12. decoracion ‚Üí (sof√°, cojines, cuadros, cortinas)
  13. juegosmesa ‚Üí (ajedrez, cartas, rompecabezas, cat√°n)
  14. moda ‚Üí (reloj, zapatos, bolso, cintur√≥n, sombrero)
  15. cocina ‚Üí (cuchillos, ollas, sartenes, utensilios)
  16. coleccionables ‚Üí (figuras colecci√≥n, posters, funko pop)
  17. herramientas ‚Üí (destornillador, taladro, martillo)
  18. instrumentos ‚Üí (guitarra, piano, bater√≠a, viol√≠n)
  19. musica ‚Üí (cd, vinilo, tickets concierto, merchandising)
  20. electrodomesticos ‚Üí (horno, licuadora, microondas)
  21. videojuegos ‚Üí (playstation, nintendo, xbox, pc gaming)
  22. merchandising ‚Üí (camiseta anime, figuras pel√≠culas)
  23. entretenimiento ‚Üí (pel√≠culas, series, plataformas digitales)
  24. calzadodeportivo ‚Üí (zapatos deportivos, sneakers)
  25. ropadeportiva ‚Üí (mallas, shorts, leggings, sudaderas)
  26. bebidas ‚Üí (refrescos, agua, jugos, energ√©ticas, alcohol, caf√©, t√©)
  
  üî• PROTOCOLO DE ACCI√ìN:
  1. ESCANEAR cada palabra del mensaje
  2. BUSCAR coincidencia EXACTA en nombres o sin√≥nimos
  3. ASIGNAR primera categor√≠a con match
  4. SI m√∫ltiples matches ‚Üí Priorizar en este orden:
     a) T√©rminos t√©cnicos
     b) Espec√≠ficos sobre gen√©ricos
     c) Marcas conocidas
  
  ‚ö†Ô∏è RESPUESTAS PERMITIDAS:
  - SOLO el nombre de la categor√≠a en min√∫sculas
  - NADA de explicaciones adicionales
  - SIN formato especial
  
  ‚úÖ EJEMPLOS:
  Input: "Quiero una Coca-Cola y un jugo de naranja"
  Output: "bebidas"
  
  Input: "Busco caf√© gourmet y tazas tem√°ticas"
  Output: "bebidas&tazas"
  
  AN√ÅLISIS REQUERIDO PARA:`;

  async extractCategory(message: string): Promise<string | null> {
    try {
      const fullPrompt = `${this.promptTexto} "${message}"`;
      const result = await this.model.generateContent(fullPrompt);
      const rawResponse = result.response.text().trim().toLowerCase();
      
      const cleanResponse = rawResponse.replace(/["'.]/g, '');
      
      const categoryMap: { [key: string]: string | null } = {
        'tecnolog√≠a': 'tecnologia',
        'bebida': 'bebidas',
        'jugo': 'bebidas',
        'refresco': 'bebidas',
        'licor': 'bebidas',
        'electr√≥nica': 'electronica',
        'decoraci√≥n': 'decoracion',
        'none': null
      };

      const categories = cleanResponse.split('&')
        .map(c => categoryMap[c] || c)
        .filter(c => this.validCategories.includes(c));

      return categories.length > 0 ? categories.join('&') : null;
    } catch (error) {
      console.error('Error:', error);
      return null;
    }
  }

  private validCategories = [
    'tecnologia', 'peluches', 'accesorios', 'libros', 'deporte',
    'tazas', 'ropa', 'salud', 'electronica', 'hogar', 'juguetes',
    'decoracion', 'juegosmesa', 'moda', 'cocina', 'coleccionables',
    'herramientas', 'instrumentos', 'musica', 'electrodomesticos',
    'videojuegos', 'merchandising', 'entretenimiento', 'calzadodeportivo',
    'ropadeportiva', 'bebidas'
  ];

  async getAIResponse(messages: Array<{ role: string; content: string }>): Promise<string> {
    try {
      const conversation = messages.map(m => `${m.role}: ${m.content}`).join('\n');
      const result = await this.model.generateContent(`Contin√∫a esta conversaci√≥n como asistente de e-commerce:\n${conversation}`);
      return result.response.text();
    } catch (error) {
      console.error('Error:', error);
      throw new InternalServerErrorException('Error al generar respuesta');
    }
  }
}